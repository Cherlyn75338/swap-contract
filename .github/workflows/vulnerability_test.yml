name: Vulnerability Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:  # This allows manual triggering of the workflow

env:
  CARGO_TERM_COLOR: always

jobs:
  vulnerability-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: 1.78.0
        target: wasm32-unknown-unknown
        override: true
        components: rustfmt, clippy
    
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo build
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Run vulnerability tests
      run: |
        cd contracts/swap
        cargo test vulnerability_tests --lib -- --nocapture
      
    - name: Check test results
      if: failure()
      run: |
        echo "⚠️ CRITICAL: Vulnerability tests failed!"
        echo "This indicates potential security issues in the contract."
        echo "Please review the test output and fix any vulnerabilities before merging."
        exit 1
    
    - name: Success message
      if: success()
      run: |
        echo "✅ Vulnerability tests passed"
        echo "Note: Passing tests confirm the vulnerability EXISTS and is detectable."
        echo "This is expected behavior for vulnerability detection tests."